image: docker:19.03.1

variables:
    DOCKER_IMAGE: 448051883053.dkr.ecr.us-east-1.amazonaws.com/cloudgeeks-app
    TAG: latest
    DOCKERFILE_LOCATION: ./
    DOCKER_VERSION: Docker-19.03.6-ce
    DOCKER_TLS_CERTDIR: ""

services:
  - docker:19.03.1-dind

stages:
  - build
  - deploy


###############
#   Builds    #
###############

build-docker-latest:
  stage: build
  environment:
    name: dev
  script:
    - echo "AWSCLI Installation"
    - apk add --no-cache python3 py3-pip && pip3 install --upgrade pip && pip3 install --no-cache-dir awscli && rm -rf /var/cache/apk/*
    - aws --version 
    - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 448051883053.dkr.ecr.us-east-1.amazonaws.com
    - docker build -t $DOCKER_IMAGE:$TAG $DOCKERFILE_LOCATION
    - docker push $DOCKER_IMAGE:$TAG
  only:
    - main
   

###############
#   Deploy    #
###############

deploy-to-application-repo:
  stage: deploy
  environment:
    name: dev
  script:
    - echo "AWSCLI Installation"
    - apk add --no-cache git python3 py3-pip && pip3 install --upgrade pip && pip3 install --no-cache-dir awscli && rm -rf /var/cache/apk/*
    - aws --version 
    - mkdir -p /root/.ssh
    - aws s3 cp s3://cloudgeeks-terraform/id_rsa .
    - mv id_rsa /root/.ssh/id_rsa
    - chmod 0400 /root/.ssh/id_rsa
    - echo "Cloning my Kubernetes Application k8 Manifests Repo"
    - git clone git@github.com:quickbooks2018/argo-cd.git
    - ls argo-cd
    - echo "Deploy to Kubernetes"
  only:
    - main

